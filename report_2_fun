Source Line  Source                                                                                                                  CPU Time  Spin Time  Overhead Time
-----------  ----------------------------------------------------------------------------------------------------------------------  --------  ---------  -------------
20           [Unknown]                                                                                                                 2.611s         0s             0s
22           [Unknown]                                                                                                                 0.186s         0s             0s
73           [Unknown]                                                                                                                 0.005s         0s             0s
74           [Unknown]                                                                                                                 0.089s         0s             0s
96           [Unknown]                                                                                                                 0.007s         0s             0s
97                   u[i] += a*(u_temp[i-1]+u_temp[i+1]) + b * u_temp[i];                                                              0.094s         0s             0s
98               }                                                                                                                                                     
99           //    free(scratch);                                                                                                                                      
100          }                                                                                                                                                         
101                                                                                                                                                                    
102          void solve_tri_special(double* restrict x, const double a, const double b, const int n){                                                                  
103          //void solve_tri_special(double* restrict x, double* restrict cprime, const double a, const double b, const int n){                                       
104               /*                                                                                                                                                   
105               This solve is designed to solve a tridiagonal linear system using thomas' algorithm with the following structure:                                    
106                                                                                                                                                                    
107               1  0   0   0   0   0                                                                                                                                 
108               -a 1-b -a  0   0   0                                                                                                                                 
109               0  -a  1-b -a  0   0                                                                                                                                 
110               ......                                                                                                                                               
111               0  0   0   -a  1-b -a                                                                                                                                
112               0  0   0   0   0   1                                                                                                                                 
113                                                                                                                                                                    
114               There is little room for generalizing its application but it should yield great performance boost                                                    
115               */                                                                                                                                                   
116                                                                                                                                                                    
117              // Allocate scratch space.                                                                                                                            
118              double* restrict cprime __attribute__((aligned(64))) = (double*) _mm_malloc(sizeof(double) * n, 64);                                                  
119              cprime[0] = 0;                                                                                                                                        
120              double astar = -a;                                                                                                                                    
121              double bstar = 1-b;                                                                                                                                   
122              double m;                                                                                                                                             
123              // loop from 1 to N - 2 inclusive                                                                                                                     
124              for (int i = 1; i < n-1; i++) {                                                                                       0.142s         0s             0s
125                  m = 1.0 / (bstar - astar * cprime[i - 1]);                                                                        0.138s         0s             0s
126                  cprime[i] = astar * m;                                                                                            4.345s         0s             0s
127                  x[i] = (x[i] - astar * x[i - 1]) * m; // I'm not sure about this step, might step into the last one               2.084s         0s             0s
128              }                                                                                                                                                     
129              cprime[n-1] = 0;                                                                                                                                      
130              // loop from N - 2 to 0 inclusive, safely testing loop end condition                                                                                  
131              for (int i = n - 1; i-- > 0; )                                                                                        0.057s         0s             0s
132                  x[i] = x[i] - cprime[i] * x[i + 1];                                                                               1.387s         0s             0s
133                                                                                                                                                                    
134              _mm_free(cprime);                                                                                                                                     
135          }                                                                                                                                                         
136                                                                                                                                                                    
137          void relaxOperation(double * restrict u, const double * restrict fstar, double* scratch, double a, double b, int n){                                      
138                                                                                                                                                                    
139              double* ustar = (double*) malloc(n*n*sizeof(double));                                                                                                 
152          [Unknown]                                                                                                                 0.005s         0s             0s
153          [Unknown]                                                                                                                 0.603s         0s             0s
156          [Unknown]                                                                                                                 0.007s         0s             0s
157          [Unknown]                                                                                                                 0.884s         0s             0s
165          [Unknown]                                                                                                                 0.006s         0s             0s
166          [Unknown]                                                                                                                 0.530s         0s             0s
180          [Unknown]                                                                                                                 0.012s         0s             0s
181          [Unknown]                                                                                                                 0.015s         0s             0s
262          [Unknown]                                                                                                                 0.002s         0s             0s
263          [Unknown]                                                                                                                 0.002s         0s             0s
329          [Unknown]                                                                                                                 0.002s         0s             0s
330          [Unknown]                                                                                                                 0.063s         0s             0s
372          [Unknown]                                                                                                                 0.019s         0s             0s
